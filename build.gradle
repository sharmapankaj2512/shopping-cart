buildscript {
    ext.kotlin_version = '1.2.71'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

allprojects {
    group 'com.pankaj'

    apply plugin: 'kotlin'
    apply plugin: 'kotlin-platform-jvm'

    repositories {
        maven { url "https://dl.bintray.com/spekframework/spek-dev" }
        mavenCentral()
    }

    dependencies {
        compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compile 'io.projectreactor:reactor-core:3.2.1.RELEASE'

        testImplementation ("org.spekframework.spek2:spek-dsl-jvm:2.0.0-alpha.1")
        testRuntimeOnly ('org.spekframework.spek2:spek-runner-junit5:2.0.0-alpha.1')
        testCompile 'org.assertj:assertj-core:3.11.1'
        testCompile 'io.mockk:mockk:1.8.9'

        testCompile 'io.projectreactor:reactor-test:3.2.1.RELEASE'

    }

    compileKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    compileTestKotlin {
        kotlinOptions.jvmTarget = "1.8"
    }

    // setup the test task
    test {
        useJUnitPlatform {
            includeEngines 'spek2'
        }
    }
}

subprojects {
    ext.springBootVersion = '2.0.5.RELEASE'
}

project(':infrastructure:controllers') {
    dependencies {
        compile project(':infrastructure:in-memory-command-persistence')
        compile project(':infrastructure:messaging')
    }
}

project(':infrastructure:messaging') {
    dependencies {
        compile project(':infrastructure:in-memory-command-persistence')
    }
}

project(':infrastructure:in-memory-command-persistence') {
    dependencies {
        compile project(':core')
    }
}